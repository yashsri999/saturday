{"ast":null,"code":"'use strict';\n\nvar util = require('./util');\n\nvar convertToJson = function convertToJson(node, options) {\n  var jObj = {}; //when no child node or attr is present\n\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    //otherwise create a textnode if node has some text\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        if (options.arrayMode === \"strict\") {\n          jObj[options.textNodeName] = [node.val];\n        } else {\n          jObj[options.textNodeName] = node.val;\n        }\n      }\n    }\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n  var keys = Object.keys(node.child);\n\n  for (var index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj[tagname] = [];\n\n      for (var tag in node.child[tagname]) {\n        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));\n      }\n    } else {\n      if (options.arrayMode === true) {\n        var result = convertToJson(node.child[tagname][0], options);\n        if (typeof result === 'object') jObj[tagname] = [result];else jObj[tagname] = result;\n      } else if (options.arrayMode === \"strict\") {\n        jObj[tagname] = [convertToJson(node.child[tagname][0], options)];\n      } else {\n        jObj[tagname] = convertToJson(node.child[tagname][0], options);\n      }\n    }\n  } //add value\n\n\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;","map":null,"metadata":{},"sourceType":"script"}