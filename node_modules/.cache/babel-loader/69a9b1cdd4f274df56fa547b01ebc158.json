{"ast":null,"code":"import { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\n\nvar Amplify =\n/** @class */\nfunction () {\n  function Amplify() {}\n\n  Amplify.register = function (comp) {\n    logger.debug('component registered in amplify', comp);\n\n    this._components.push(comp);\n\n    if (typeof comp.getModuleName === 'function') {\n      Amplify[comp.getModuleName()] = comp;\n    } else {\n      logger.debug('no getModuleName method for component', comp);\n    } // Finally configure this new component(category) loaded\n    // With the new modularization changes in Amplify V3, all the Amplify\n    // component are not loaded/registered right away but when they are\n    // imported (and hence instantiated) in the client's app. This ensures\n    // that all new components imported get correctly configured with the\n    // configuration that Amplify.configure() was called with.\n\n\n    comp.configure(this._config);\n  };\n\n  Amplify.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config;\n    this._config = Object.assign(this._config, config);\n    logger.debug('amplify config', this._config);\n\n    this._components.map(function (comp) {\n      comp.configure(_this._config);\n    });\n\n    return this._config;\n  };\n\n  Amplify.addPluggable = function (pluggable) {\n    if (pluggable && pluggable['getCategory'] && typeof pluggable['getCategory'] === 'function') {\n      this._components.map(function (comp) {\n        if (comp['addPluggable'] && typeof comp['addPluggable'] === 'function') {\n          comp.addPluggable(pluggable);\n        }\n      });\n    }\n  };\n\n  Amplify._components = [];\n  Amplify._config = {}; // for backward compatibility to avoid breaking change\n  // if someone is using like Amplify.Auth\n\n  Amplify.Auth = null;\n  Amplify.Analytics = null;\n  Amplify.API = null;\n  Amplify.Storage = null;\n  Amplify.I18n = null;\n  Amplify.Cache = null;\n  Amplify.PubSub = null;\n  Amplify.Interactions = null;\n  Amplify.Pushnotification = null;\n  Amplify.UI = null;\n  Amplify.XR = null;\n  Amplify.Predictions = null;\n  Amplify.DataStore = null;\n  Amplify.Logger = LoggerClass;\n  Amplify.ServiceWorker = null;\n  return Amplify;\n}();\n\nexport { Amplify };\n/**\n * @deprecated use named import\n */\n\nexport default Amplify;","map":null,"metadata":{},"sourceType":"module"}