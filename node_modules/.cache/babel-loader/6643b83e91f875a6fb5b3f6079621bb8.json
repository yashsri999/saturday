{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar escape_attribute_1 = require(\"./escape-attribute\");\n/**\n * Represents an XML node.\n */\n\n\nvar XmlNode =\n/** @class */\nfunction () {\n  function XmlNode(name, children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n  }\n\n  XmlNode.prototype.withName = function (name) {\n    this.name = name;\n    return this;\n  };\n\n  XmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n  };\n\n  XmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n  };\n\n  XmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n  };\n\n  XmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = \"<\" + this.name; // add attributes\n\n    var attributes = this.attributes;\n\n    for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n      var attributeName = _a[_i];\n      var attribute = attributes[attributeName];\n\n      if (typeof attribute !== \"undefined\" && attribute !== null) {\n        xmlText += \" \" + attributeName + \"=\\\"\" + escape_attribute_1.escapeAttribute(\"\" + attribute) + \"\\\"\";\n      }\n    }\n\n    return xmlText += !hasChildren ? \"/>\" : \">\" + this.children.map(function (c) {\n      return c.toString();\n    }).join(\"\") + \"</\" + this.name + \">\";\n  };\n\n  return XmlNode;\n}();\n\nexports.XmlNode = XmlNode;","map":null,"metadata":{},"sourceType":"script"}