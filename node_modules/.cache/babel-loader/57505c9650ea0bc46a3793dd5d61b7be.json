{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar protocol_http_1 = require(\"@aws-sdk/protocol-http\");\n\nfunction addExpectContinueMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var request;\n        return tslib_1.__generator(this, function (_a) {\n          request = args.request;\n\n          if (protocol_http_1.HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = tslib_1.__assign(tslib_1.__assign({}, request.headers), {\n              Expect: \"100-continue\"\n            });\n          }\n\n          return [2\n          /*return*/\n          , next(tslib_1.__assign(tslib_1.__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n}\n\nexports.addExpectContinueMiddleware = addExpectContinueMiddleware;\nexports.addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\"\n};\n\nexports.getAddExpectContinuePlugin = function (options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(addExpectContinueMiddleware(options), exports.addExpectContinueMiddlewareOptions);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}