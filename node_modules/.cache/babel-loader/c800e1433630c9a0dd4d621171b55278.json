{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar constants_1 = require(\"./constants\");\n\nvar delayDecider_1 = require(\"./delayDecider\");\n\nvar retryDecider_1 = require(\"./retryDecider\");\n\nvar service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\n\nvar ExponentialBackOffStrategy =\n/** @class */\nfunction () {\n  function ExponentialBackOffStrategy(maxRetries, retryDecider, delayDecider) {\n    if (retryDecider === void 0) {\n      retryDecider = retryDecider_1.defaultRetryDecider;\n    }\n\n    if (delayDecider === void 0) {\n      delayDecider = delayDecider_1.defaultDelayDecider;\n    }\n\n    this.maxRetries = maxRetries;\n    this.retryDecider = retryDecider;\n    this.delayDecider = delayDecider;\n  }\n\n  ExponentialBackOffStrategy.prototype.shouldRetry = function (error, retryAttempted) {\n    return retryAttempted < this.maxRetries && this.retryDecider(error);\n  };\n\n  ExponentialBackOffStrategy.prototype.retry = function (next, args) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var retries, totalDelay, _loop_1, this_1, state_1;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            retries = 0;\n            totalDelay = 0;\n\n            _loop_1 = function _loop_1() {\n              var _a, response, output, err_1, delay_1;\n\n              return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    _b.trys.push([0, 2,, 5]);\n\n                    return [4\n                    /*yield*/\n                    , next(args)];\n\n                  case 1:\n                    _a = _b.sent(), response = _a.response, output = _a.output;\n                    output.$metadata.retries = retries;\n                    output.$metadata.totalRetryDelay = totalDelay;\n                    return [2\n                    /*return*/\n                    , {\n                      value: {\n                        response: response,\n                        output: output\n                      }\n                    }];\n\n                  case 2:\n                    err_1 = _b.sent();\n                    if (!this_1.shouldRetry(err_1, retries)) return [3\n                    /*break*/\n                    , 4];\n                    delay_1 = this_1.delayDecider(service_error_classification_1.isThrottlingError(err_1) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, retries++);\n                    totalDelay += delay_1;\n                    return [4\n                    /*yield*/\n                    , new Promise(function (resolve) {\n                      return setTimeout(resolve, delay_1);\n                    })];\n\n                  case 3:\n                    _b.sent();\n\n                    return [2\n                    /*return*/\n                    , \"continue\"];\n\n                  case 4:\n                    if (!err_1.$metadata) {\n                      err_1.$metadata = {};\n                    }\n\n                    err_1.$metadata.retries = retries;\n                    err_1.$metadata.totalRetryDelay = totalDelay;\n                    throw err_1;\n\n                  case 5:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _a.label = 1;\n\n          case 1:\n            if (!true) return [3\n            /*break*/\n            , 3];\n            return [5\n            /*yield**/\n            , _loop_1()];\n\n          case 2:\n            state_1 = _a.sent();\n            if (typeof state_1 === \"object\") return [2\n            /*return*/\n            , state_1.value];\n            return [3\n            /*break*/\n            , 1];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return ExponentialBackOffStrategy;\n}();\n\nexports.ExponentialBackOffStrategy = ExponentialBackOffStrategy;","map":null,"metadata":{},"sourceType":"script"}