{"ast":null,"code":"import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\n/**\n * @internal\n */\n\nexport function getCanonicalHeaders(_a, unsignableHeaders, signableHeaders) {\n  var headers = _a.headers;\n  var canonical = {};\n\n  for (var _i = 0, _b = Object.keys(headers).sort(); _i < _b.length; _i++) {\n    var headerName = _b[_i];\n    var canonicalHeaderName = headerName.toLowerCase();\n\n    if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n        continue;\n      }\n    }\n\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n\n  return canonical;\n}","map":null,"metadata":{},"sourceType":"module"}