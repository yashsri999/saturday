{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nimport { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n/**\n * @internal\n */\n\nexport function getPayloadHash(_a, hashConstructor) {\n  var headers = _a.headers,\n      body = _a.body;\n  return __awaiter(this, void 0, void 0, function () {\n    var _i, _b, headerName, hashCtor, _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          for (_i = 0, _b = Object.keys(headers); _i < _b.length; _i++) {\n            headerName = _b[_i];\n\n            if (headerName.toLowerCase() === SHA256_HEADER) {\n              return [2\n              /*return*/\n              , headers[headerName]];\n            }\n          }\n\n          if (!(body == undefined)) return [3\n          /*break*/\n          , 1];\n          return [2\n          /*return*/\n          , \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"];\n\n        case 1:\n          if (!(typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body))) return [3\n          /*break*/\n          , 3];\n          hashCtor = new hashConstructor();\n          hashCtor.update(body);\n          _c = toHex;\n          return [4\n          /*yield*/\n          , hashCtor.digest()];\n\n        case 2:\n          return [2\n          /*return*/\n          , _c.apply(void 0, [_d.sent()])];\n\n        case 3:\n          // As any defined body that is not a string or binary data is a stream, this\n          // body is unsignable. Attempt to send the request with an unsigned payload,\n          // which may or may not be accepted by the service.\n          return [2\n          /*return*/\n          , UNSIGNED_PAYLOAD];\n      }\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}