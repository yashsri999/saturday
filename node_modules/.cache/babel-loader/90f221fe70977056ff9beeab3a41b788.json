{"ast":null,"code":"import _toConsumableArray from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/src/components/auth/UploadImage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../button/Button';\nimport { Messages } from '../messages/Messages';\nimport { ProgressBar } from '../progressbar/ProgressBar';\nimport DomHandler from '../utils/DomHandler';\nimport classNames from 'classnames';\nexport var UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this, props));\n    _this.state = {\n      files: [],\n      msgs: []\n    };\n    _this.upload = _this.upload.bind(_assertThisInitialized(_this));\n    _this.clear = _this.clear.bind(_assertThisInitialized(_this));\n    _this.onFileSelect = _this.onFileSelect.bind(_assertThisInitialized(_this));\n    _this.onDragEnter = _this.onDragEnter.bind(_assertThisInitialized(_this));\n    _this.onDragOver = _this.onDragOver.bind(_assertThisInitialized(_this));\n    _this.onDragLeave = _this.onDragLeave.bind(_assertThisInitialized(_this));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onSimpleUploaderClick = _this.onSimpleUploaderClick.bind(_assertThisInitialized(_this));\n    _this.duplicateIEEvent = false;\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"hasFiles\",\n    value: function hasFiles() {\n      return this.state.files && this.state.files.length > 0;\n    }\n  }, {\n    key: \"isImage\",\n    value: function isImage(file) {\n      return /^image\\//.test(file.type);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(event, index) {\n      this.clearInputElement();\n\n      var currentFiles = _toConsumableArray(this.state.files);\n\n      var removedFile = this.state.files[index];\n      currentFiles.splice(index, 1);\n      this.setState({\n        files: currentFiles\n      });\n\n      if (this.props.onRemove) {\n        this.props.onRemove({\n          originalEvent: event,\n          file: removedFile\n        });\n      }\n    }\n  }, {\n    key: \"clearInputElement\",\n    value: function clearInputElement() {\n      this.fileInput.value = '';\n\n      if (this.props.mode === 'basic') {\n        this.fileInput.style.display = 'inline';\n      }\n    }\n  }, {\n    key: \"clearIEInput\",\n    value: function clearIEInput() {\n      if (this.fileInput) {\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n\n        this.fileInput.value = '';\n      }\n    }\n  }, {\n    key: \"formatSize\",\n    value: function formatSize(bytes) {\n      if (bytes === 0) {\n        return '0 B';\n      }\n\n      var k = 1000,\n          dm = 3,\n          sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n          i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  }, {\n    key: \"onFileSelect\",\n    value: function onFileSelect(event) {\n      var _this2 = this;\n\n      if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false;\n        return;\n      }\n\n      this.setState({\n        msgs: []\n      });\n      this.files = this.state.files || [];\n      var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n\n        if (!this.isFileSelected(file)) {\n          if (this.validate(file)) {\n            if (this.isImage(file)) {\n              file.objectURL = window.URL.createObjectURL(file);\n            }\n\n            this.files.push(file);\n          }\n        }\n      }\n\n      this.setState({\n        files: this.files\n      }, function () {\n        if (_this2.hasFiles() && _this2.props.auto) {\n          _this2.upload();\n        }\n      });\n\n      if (this.props.onSelect) {\n        this.props.onSelect({\n          originalEvent: event,\n          files: files\n        });\n      }\n\n      if (event.type !== 'drop' && this.isIE11()) {\n        this.clearIEInput();\n      } else {\n        this.clearInputElement();\n      }\n\n      if (this.props.mode === 'basic') {\n        this.fileInput.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"isFileSelected\",\n    value: function isFileSelected(file) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var sFile = _step.value;\n          if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) return true;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isIE11\",\n    value: function isIE11() {\n      return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(file) {\n      if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n        var message = {\n          severity: 'error',\n          summary: this.props.invalidFileSizeMessageSummary.replace('{0}', file.name),\n          detail: this.props.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.props.maxFileSize))\n        };\n\n        if (this.props.mode === 'advanced') {\n          this.messagesUI.show(message);\n        }\n\n        if (this.props.onValidationFail) {\n          this.props.onValidationFail(file);\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      var _this3 = this;\n\n      if (this.props.customUpload) {\n        if (this.props.uploadHandler) {\n          this.props.uploadHandler({\n            files: this.state.files\n          });\n        }\n      } else {\n        this.setState({\n          msgs: []\n        });\n        var xhr = new XMLHttpRequest();\n        var formData = new FormData();\n\n        if (this.props.onBeforeUpload) {\n          this.props.onBeforeUpload({\n            'xhr': xhr,\n            'formData': formData\n          });\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.state.files[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var file = _step2.value;\n            formData.append(this.props.name, file, file.name);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        xhr.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            _this3.setState({\n              progress: Math.round(event.loaded * 100 / event.total)\n            });\n          }\n\n          if (_this3.props.onProgress) {\n            _this3.props.onProgress({\n              originalEvent: event,\n              progress: _this3.progress\n            });\n          }\n\n          ;\n        });\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            _this3.setState({\n              progress: 0\n            });\n\n            if (xhr.status >= 200 && xhr.status < 300) {\n              if (_this3.props.onUpload) {\n                _this3.props.onUpload({\n                  xhr: xhr,\n                  files: _this3.files\n                });\n              }\n            } else {\n              if (_this3.props.onError) {\n                _this3.props.onError({\n                  xhr: xhr,\n                  files: _this3.files\n                });\n              }\n            }\n\n            _this3.clear();\n          }\n        };\n\n        xhr.open('POST', this.props.url, true);\n\n        if (this.props.onBeforeSend) {\n          this.props.onBeforeSend({\n            'xhr': xhr,\n            'formData': formData\n          });\n        }\n\n        xhr.withCredentials = this.props.withCredentials;\n        xhr.send(formData);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        files: []\n      });\n\n      if (this.props.onClear) {\n        this.props.onClear();\n      }\n\n      this.clearInputElement();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      DomHandler.addClass(event.currentTarget.parentElement, 'p-focus');\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      DomHandler.removeClass(event.currentTarget.parentElement, 'p-focus');\n    }\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter(event) {\n      if (!this.props.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      if (!this.props.disabled) {\n        DomHandler.addClass(this.content, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (!this.props.disabled) {\n        DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n      }\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (!this.props.disabled) {\n        DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n        var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        var allowDrop = this.props.multiple || files && files.length === 1;\n\n        if (allowDrop) {\n          this.onFileSelect(event);\n        }\n      }\n    }\n  }, {\n    key: \"onSimpleUploaderClick\",\n    value: function onSimpleUploaderClick() {\n      if (this.hasFiles()) {\n        this.upload();\n      }\n    }\n  }, {\n    key: \"renderChooseButton\",\n    value: function renderChooseButton() {\n      var _this4 = this;\n\n      var className = classNames('p-button p-fileupload-choose p-component p-button-text-icon-left');\n      return React.createElement(\"span\", {\n        icon: \"pi pi-plus\",\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this4.fileInput = el;\n        },\n        type: \"file\",\n        onChange: this.onFileSelect,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        multiple: this.props.multiple,\n        accept: this.props.accept,\n        disabled: this.props.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"p-button-icon p-button-icon-left p-clickable pi pi-fw pi-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"p-button-text p-clickable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, this.props.chooseLabel));\n    }\n  }, {\n    key: \"renderFiles\",\n    value: function renderFiles() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"p-fileupload-files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, this.state.files.map(function (file, index) {\n        var preview = _this5.isImage(file) ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: file.name,\n          role: \"presentation\",\n          src: file.objectURL,\n          width: _this5.props.previewWidth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        })) : null;\n        var fileName = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, file.name);\n        var size = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, _this5.formatSize(file.size));\n        var removeButton = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"button\",\n          icon: \"pi pi-times\",\n          onClick: function onClick(e) {\n            return _this5.remove(e, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }));\n        return React.createElement(\"div\", {\n          className: \"p-fileupload-row\",\n          key: file.name + file.type + file.size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, preview, fileName, size, removeButton);\n      }));\n    }\n  }, {\n    key: \"renderAdvanced\",\n    value: function renderAdvanced() {\n      var _this6 = this;\n\n      var className = classNames('p-fileupload p-component', this.props.className);\n      var uploadButton, cancelButton, filesList, progressBar;\n      var chooseButton = this.renderChooseButton();\n\n      if (!this.props.auto) {\n        uploadButton = React.createElement(Button, {\n          type: \"button\",\n          label: this.props.uploadLabel,\n          icon: \"pi pi-upload\",\n          onClick: this.upload,\n          disabled: this.props.disabled || !this.hasFiles(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        });\n        cancelButton = React.createElement(Button, {\n          type: \"button\",\n          label: this.props.cancelLabel,\n          icon: \"pi pi-times\",\n          onClick: this.clear,\n          disabled: this.props.disabled || !this.hasFiles(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        });\n      }\n\n      if (this.hasFiles()) {\n        filesList = this.renderFiles();\n        progressBar = React.createElement(ProgressBar, {\n          value: this.state.progress,\n          showValue: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-fileupload-buttonbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, chooseButton, uploadButton, cancelButton), React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this6.content = el;\n        },\n        className: \"p-fileupload-content\",\n        onDragEnter: this.onDragEnter,\n        onDragOver: this.onDragOver,\n        onDragLeave: this.onDragLeave,\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, progressBar, React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this6.messagesUI = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), filesList));\n    }\n  }, {\n    key: \"renderBasic\",\n    value: function renderBasic() {\n      var _this7 = this;\n\n      var buttonClassName = classNames('p-button p-fileupload-choose p-component p-button-text-icon-left', {\n        'p-fileupload-choose-selected': this.hasFiles()\n      });\n      var iconClassName = classNames('p-button-icon-left pi', {\n        'pi-plus': !this.hasFiles() || this.props.auto,\n        'pi-upload': this.hasFiles() && !this.props.auto\n      });\n      return React.createElement(\"span\", {\n        className: buttonClassName,\n        onMouseUp: this.onSimpleUploaderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: iconClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"p-button-text p-clickable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, this.props.auto ? this.props.chooseLabel : this.hasFiles() ? this.state.files[0].name : this.props.chooseLabel), React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this7.fileInput = el;\n        },\n        type: \"file\",\n        multiple: this.props.multiple,\n        accept: this.props.accept,\n        disabled: this.props.disabled,\n        onChange: this.onFileSelect,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.mode === 'advanced') return this.renderAdvanced();else if (this.props.mode === 'basic') return this.renderBasic();\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\nUploadImage.defaultProps = {\n  id: null,\n  name: null,\n  url: null,\n  mode: 'advanced',\n  multiple: false,\n  accept: null,\n  disabled: false,\n  auto: false,\n  maxFileSize: null,\n  invalidFileSizeMessageSummary: '{0}: Invalid file size, ',\n  invalidFileSizeMessageDetail: 'maximum upload size is {0}.',\n  style: null,\n  className: null,\n  widthCredentials: false,\n  previewWidth: 50,\n  chooseLabel: 'Choose',\n  uploadLabel: 'Upload',\n  cancelLabel: 'Cancel',\n  customUpload: false,\n  onBeforeUpload: null,\n  onBeforeSend: null,\n  onUpload: null,\n  onError: null,\n  onClear: null,\n  onSelect: null,\n  onProgress: null,\n  onValidationFail: null,\n  uploadHandler: null,\n  onRemove: null\n};\nUploadImage.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  url: PropTypes.string,\n  mode: PropTypes.string,\n  multiple: PropTypes.bool,\n  accept: PropTypes.string,\n  disabled: PropTypes.bool,\n  auto: PropTypes.bool,\n  maxFileSize: PropTypes.number,\n  invalidFileSizeMessageSummary: PropTypes.string,\n  invalidFileSizeMessageDetail: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  widthCredentials: PropTypes.bool,\n  previewWidth: PropTypes.number,\n  chooseLabel: PropTypes.string,\n  uploadLabel: PropTypes.string,\n  cancelLabel: PropTypes.string,\n  customUpload: PropTypes.bool,\n  onBeforeUpload: PropTypes.func,\n  onBeforeSend: PropTypes.func,\n  onUpload: PropTypes.func,\n  onError: PropTypes.func,\n  onClear: PropTypes.func,\n  onSelect: PropTypes.func,\n  onProgress: PropTypes.func,\n  onValidationFail: PropTypes.func,\n  uploadHandler: PropTypes.func,\n  onRemove: PropTypes.func\n};\nexport default UploadImage;","map":{"version":3,"sources":["/Users/yash/Documents/AWS/aws-cognito-tutorial-starter-test/src/components/auth/UploadImage.js"],"names":["React","Component","PropTypes","Button","Messages","ProgressBar","DomHandler","classNames","UploadImage","props","state","files","msgs","upload","bind","clear","onFileSelect","onDragEnter","onDragOver","onDragLeave","onDrop","onFocus","onBlur","onSimpleUploaderClick","duplicateIEEvent","length","file","test","type","event","index","clearInputElement","currentFiles","removedFile","splice","setState","onRemove","originalEvent","fileInput","value","mode","style","display","bytes","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","isIE11","dataTransfer","target","isFileSelected","validate","isImage","objectURL","window","URL","createObjectURL","push","hasFiles","auto","onSelect","clearIEInput","sFile","name","size","document","maxFileSize","message","severity","summary","invalidFileSizeMessageSummary","replace","detail","invalidFileSizeMessageDetail","formatSize","messagesUI","show","onValidationFail","customUpload","uploadHandler","xhr","XMLHttpRequest","formData","FormData","onBeforeUpload","append","addEventListener","lengthComputable","progress","round","loaded","total","onProgress","onreadystatechange","readyState","status","onUpload","onError","open","url","onBeforeSend","withCredentials","send","onClear","addClass","currentTarget","parentElement","removeClass","disabled","stopPropagation","preventDefault","content","allowDrop","multiple","className","el","accept","chooseLabel","map","preview","previewWidth","fileName","removeButton","e","remove","uploadButton","cancelButton","filesList","progressBar","chooseButton","renderChooseButton","uploadLabel","cancelLabel","renderFiles","id","buttonClassName","iconClassName","renderAdvanced","renderBasic","defaultProps","widthCredentials","propTypes","string","bool","number","object","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button} from '../button/Button';\nimport {Messages} from '../messages/Messages';\nimport {ProgressBar} from '../progressbar/ProgressBar';\nimport DomHandler from '../utils/DomHandler';\nimport classNames from 'classnames';\n\nexport class UploadImage extends Component {\n\n    static defaultProps = {\n        id: null,\n        name: null,\n        url: null,\n        mode: 'advanced',\n        multiple: false,\n        accept: null,\n        disabled: false,\n        auto: false,\n        maxFileSize: null,\n        invalidFileSizeMessageSummary: '{0}: Invalid file size, ',\n        invalidFileSizeMessageDetail: 'maximum upload size is {0}.',\n        style: null,\n        className: null,\n        widthCredentials: false,\n        previewWidth: 50,\n        chooseLabel: 'Choose',\n        uploadLabel: 'Upload',\n        cancelLabel: 'Cancel',\n        customUpload: false,\n        onBeforeUpload: null,\n        onBeforeSend: null,\n        onUpload: null,\n        onError: null,\n        onClear: null,\n        onSelect: null,\n        onProgress: null,\n        onValidationFail: null,\n        uploadHandler: null,\n        onRemove: null\n    }\n\n    static propTypes = {\n        id: PropTypes.string,\n        name: PropTypes.string,\n        url: PropTypes.string,\n        mode: PropTypes.string,\n        multiple: PropTypes.bool,\n        accept: PropTypes.string,\n        disabled: PropTypes.bool,\n        auto: PropTypes.bool,\n        maxFileSize: PropTypes.number,\n        invalidFileSizeMessageSummary: PropTypes.string,\n        invalidFileSizeMessageDetail: PropTypes.string,\n        style: PropTypes.object,\n        className: PropTypes.string,\n        widthCredentials: PropTypes.bool,\n        previewWidth: PropTypes.number,\n        chooseLabel: PropTypes.string,\n        uploadLabel: PropTypes.string,\n        cancelLabel: PropTypes.string,\n        customUpload: PropTypes.bool,\n        onBeforeUpload: PropTypes.func,\n        onBeforeSend: PropTypes.func,\n        onUpload: PropTypes.func,\n        onError: PropTypes.func,\n        onClear: PropTypes.func,\n        onSelect: PropTypes.func,\n        onProgress: PropTypes.func,\n        onValidationFail: PropTypes.func,\n        uploadHandler: PropTypes.func,\n        onRemove: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            files:[],\n            msgs: []\n        };\n\n        this.upload = this.upload.bind(this);\n        this.clear = this.clear.bind(this);\n        this.onFileSelect = this.onFileSelect.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onSimpleUploaderClick = this.onSimpleUploaderClick.bind(this);\n\n        this.duplicateIEEvent = false;\n    }\n\n    hasFiles() {\n        return this.state.files && this.state.files.length > 0;\n    }\n\n    isImage(file) {\n        return /^image\\//.test(file.type);\n    }\n\n    remove(event, index) {\n        this.clearInputElement();\n        let currentFiles = [...this.state.files];\n        let removedFile = this.state.files[index];\n\n        currentFiles.splice(index, 1);\n        this.setState({ files: currentFiles });\n\n        if (this.props.onRemove) {\n            this.props.onRemove({\n                originalEvent: event,\n                file: removedFile\n            })\n        }\n    }\n\n    clearInputElement() {\n        this.fileInput.value = '';\n        if(this.props.mode === 'basic') {\n            this.fileInput.style.display = 'inline';\n        }\n    }\n\n    clearIEInput() {\n        if (this.fileInput) {\n            this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n            this.fileInput.value = '';\n        }\n    }\n\n    formatSize(bytes) {\n        if(bytes === 0) {\n            return '0 B';\n        }\n        let k = 1000,\n        dm = 3,\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n        i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    onFileSelect(event) {\n        if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n            this.duplicateIEEvent = false;\n            return;\n        }\n\n        this.setState({msgs:[]});\n        this.files = this.state.files || [];\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            if (!this.isFileSelected(file)) {\n                if (this.validate(file)) {\n                    if (this.isImage(file)) {\n                        file.objectURL = window.URL.createObjectURL(file);\n                    }\n                    this.files.push(file);\n                }\n            }\n        }\n\n        this.setState({files: this.files}, () => {\n            if (this.hasFiles() && this.props.auto) {\n                this.upload();\n            }\n        });\n\n        if(this.props.onSelect) {\n            this.props.onSelect({originalEvent: event, files: files});\n        }\n\n        if (event.type !== 'drop' && this.isIE11()) {\n            this.clearIEInput();\n        }\n        else {\n            this.clearInputElement();\n        }\n\n        if(this.props.mode === 'basic') {\n            this.fileInput.style.display = 'none';\n        }\n    }\n\n    isFileSelected(file){\n        for (let sFile of this.state.files){\n            if ((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size))\n                return true;\n        }\n        return false;\n    }\n\n    isIE11() {\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n\n    validate(file) {\n        if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n            const message = {\n                severity: 'error',\n                summary: this.props.invalidFileSizeMessageSummary.replace('{0}', file.name),\n                detail: this.props.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.props.maxFileSize))\n            };\n\n            if (this.props.mode === 'advanced') {\n                this.messagesUI.show(message);\n            }\n\n            if (this.props.onValidationFail) {\n                this.props.onValidationFail(file);\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    upload() {\n        if (this.props.customUpload) {\n            if (this.props.uploadHandler) {\n                this.props.uploadHandler({\n                    files: this.state.files\n                })\n            }\n        }\n        else {\n            this.setState({msgs:[]});\n            let xhr = new XMLHttpRequest();\n            let formData = new FormData();\n\n            if (this.props.onBeforeUpload) {\n                this.props.onBeforeUpload({\n                    'xhr': xhr,\n                    'formData': formData\n                });\n            }\n\n            for (let file of this.state.files) {\n                formData.append(this.props.name, file, file.name);\n            }\n\n            xhr.upload.addEventListener('progress', (event) => {\n                if (event.lengthComputable) {\n                    this.setState({progress: Math.round((event.loaded * 100) / event.total)});\n                }\n\n                if (this.props.onProgress) {\n                    this.props.onProgress({\n                        originalEvent: event,\n                        progress: this.progress\n                    });\n                };\n            });\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                this.setState({progress: 0});\n\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        if (this.props.onUpload) {\n                            this.props.onUpload({xhr: xhr, files: this.files});\n                        }\n                    }\n                    else {\n                        if (this.props.onError) {\n                            this.props.onError({xhr: xhr, files: this.files});\n                        }\n                    }\n\n                    this.clear();\n                }\n            };\n\n            xhr.open('POST', this.props.url, true);\n\n            if(this.props.onBeforeSend) {\n                this.props.onBeforeSend({\n                    'xhr': xhr,\n                    'formData': formData\n                });\n            }\n\n            xhr.withCredentials = this.props.withCredentials;\n\n            xhr.send(formData);\n        }\n    }\n\n    clear() {\n        this.setState({files:[]});\n        if (this.props.onClear) {\n            this.props.onClear();\n        }\n        this.clearInputElement();\n    }\n\n    onFocus(event) {\n        DomHandler.addClass(event.currentTarget.parentElement, 'p-focus');\n    }\n\n    onBlur(event) {\n        DomHandler.removeClass(event.currentTarget.parentElement, 'p-focus');\n    }\n\n    onDragEnter(event) {\n        if(!this.props.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    onDragOver(event) {\n        if (!this.props.disabled) {\n            DomHandler.addClass(this.content, 'p-fileupload-highlight');\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    onDragLeave(event) {\n        if (!this.props.disabled) {\n            DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n        }\n    }\n\n    onDrop(event) {\n        if (!this.props.disabled) {\n            DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n            event.stopPropagation();\n            event.preventDefault();\n\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n            let allowDrop = this.props.multiple||(files && files.length === 1);\n\n            if(allowDrop) {\n                this.onFileSelect(event);\n            }\n        }\n    }\n\n    onSimpleUploaderClick() {\n        if (this.hasFiles()) {\n            this.upload();\n        }\n    }\n\n    renderChooseButton() {\n        let className = classNames('p-button p-fileupload-choose p-component p-button-text-icon-left');\n\n        return (\n            <span icon=\"pi pi-plus\" className={className}>\n                <input ref={(el) => this.fileInput = el} type=\"file\" onChange={this.onFileSelect} onFocus={this.onFocus} onBlur={this.onBlur}\n                    multiple={this.props.multiple} accept={this.props.accept} disabled={this.props.disabled} />\n                <span className=\"p-button-icon p-button-icon-left p-clickable pi pi-fw pi-plus\"></span>\n                <span className=\"p-button-text p-clickable\">{this.props.chooseLabel}</span>\n            </span>\n        );\n    }\n\n    renderFiles() {\n        return (\n            <div className=\"p-fileupload-files\">\n                {\n                    this.state.files.map((file, index) => {\n                        let preview = this.isImage(file) ? <div><img alt={file.name} role=\"presentation\" src={file.objectURL} width={this.props.previewWidth} /></div> : null;\n                        let fileName = <div>{file.name}</div>;\n                        let size = <div>{this.formatSize(file.size)}</div>;\n                        let removeButton = <div><Button type=\"button\" icon=\"pi pi-times\" onClick={(e) => this.remove(e, index)} /></div>\n\n                        return <div className=\"p-fileupload-row\" key={file.name + file.type + file.size}>\n                                 {preview}\n                                 {fileName}\n                                 {size}\n                                 {removeButton}\n                            </div>\n                    })\n                }\n            </div>\n        );\n    }\n\n    renderAdvanced() {\n        let className = classNames('p-fileupload p-component', this.props.className);\n        let uploadButton, cancelButton, filesList, progressBar;\n        let chooseButton = this.renderChooseButton();\n\n        if (!this.props.auto) {\n            uploadButton = <Button type=\"button\" label={this.props.uploadLabel} icon=\"pi pi-upload\" onClick={this.upload} disabled={this.props.disabled || !this.hasFiles()} />;\n            cancelButton = <Button type=\"button\" label={this.props.cancelLabel} icon=\"pi pi-times\" onClick={this.clear} disabled={this.props.disabled || !this.hasFiles()} />;\n        }\n\n        if (this.hasFiles()) {\n            filesList = this.renderFiles();\n            progressBar = <ProgressBar value={this.state.progress} showValue={false} />;\n        }\n\n        return (\n            <div id={this.props.id} className={className} style={this.props.style}>\n                <div className=\"p-fileupload-buttonbar\">\n                    {chooseButton}\n                    {uploadButton}\n                    {cancelButton}\n                </div>\n                <div ref={(el) => {this.content = el;}} className=\"p-fileupload-content\"\n                    onDragEnter={this.onDragEnter} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDrop={this.onDrop}>\n                    {progressBar}\n                    <Messages ref={(el) => this.messagesUI = el } />\n                    {filesList}\n                </div>\n            </div>\n        );\n    }\n\n    renderBasic() {\n        let buttonClassName = classNames('p-button p-fileupload-choose p-component p-button-text-icon-left', {'p-fileupload-choose-selected': this.hasFiles()});\n        let iconClassName = classNames('p-button-icon-left pi', {'pi-plus': !this.hasFiles() || this.props.auto, 'pi-upload': this.hasFiles() && !this.props.auto});\n\n        return (\n            <span className={buttonClassName} onMouseUp={this.onSimpleUploaderClick}>\n                <span className={iconClassName}></span>\n                <span className=\"p-button-text p-clickable\">{this.props.auto ? this.props.chooseLabel : this.hasFiles() ? this.state.files[0].name : this.props.chooseLabel}</span>\n                <input ref={(el) => this.fileInput = el} type=\"file\" multiple={this.props.multiple} accept={this.props.accept} disabled={this.props.disabled}\n                    onChange={this.onFileSelect} onFocus={this.onFocus} onBlur={this.onBlur} />\n             </span>\n        );\n    }\n\n    render() {\n        if (this.props.mode === 'advanced')\n            return this.renderAdvanced();\n        else if (this.props.mode === 'basic')\n            return this.renderBasic();\n    }\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}